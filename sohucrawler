var iconv = require('iconv-lite');
 var http = require('http'),
    querystring = require('querystring'),
    zlib = require('zlib');
var args = {
    //参数以及备用数据
    contents : querystring.stringify({  
        //发包的信息
        name:'www.sohu.com',
    }), 
};

var options = {
    hostname: 'www.sohu.com',
    port: 80,
    path: '/',
    method: 'GET',
    headers: {
        'Accept':'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8',
        'Content-Length': args.contents.length,
        'User-Agent':'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_10_2) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/42.0.2311.11 Safari/537.36',
        'Accept-Encoding':'gzip, deflate',
   },
};
var get = function ( options, args, callback ){
    var req = http.request(options, function (res) {
        var chunks =[], data, encoding = res.headers['content-encoding'];
        // 非gzip/deflate要转成utf-8格式
      //  if( encoding === 'undefined'){
       //     res.setEncoding('utf-8'); 
       // }
        res.on('data', function (chunk){
            chunks.push(chunk);
        }); 
        res.on('end', function (){
            var buffer = Buffer.concat(chunks);
            //if (encoding == 'gzip') {
                zlib.gunzip(buffer, function (err, decoded) {
                    data = decoded.toString();
                    callback( err, args, res.headers, data); 
                });
          /**  } else if (encoding == 'deflate') {
                zlib.inflate(buffer, function (err, decoded) {
                    data = decoded.toString();
                    callback( err, args, res.headers, data); 
                });
            } else {
                data = buffer.toString();
                callback( null, args, res.headers, data);
            } **/
        });
    });
    req.write( args.contents ); 
    req.end();
};
get( options, args, function (err, args, headers, data){
    console.log('==>header \n', headers);
    console.log(iconv.decode(data, "GB2312"));
}); 
